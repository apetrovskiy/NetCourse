Task 01: convert non-generic code for feeding an animal to better like
servant.Feed<Dog>();
this assumes that we don't need to pass a new animal object into the method

Task 02: the same for analysing health

Task 03: introduce constraints to generic methods
03.1 all animals except the skunk - analysis of the health
03.2 the skunk should have difference due to its ability to spoil everything

Task 04: introduce interface(s) for animals
04.1 preserve difference for the skunk
04.2 use interface(s) as constraints

Task 05: create a class and a method for getting born new animals
05.1 the new() constraint
05.2 the default instruction
sample usage:
var vet = new Vet();
var puppy = vet.GetNew<Dog>();
var puppies = vet.GetNew<Dog>();
the method should return a collection or a single child animal,
it's possible to crate a method returning a colelction with subsequent loading/enumerating only one pet